From f3fa24d9bd04ed37674f896213d037ecca463507 Mon Sep 17 00:00:00 2001
From: Aloka Dixit <alokad@codeaurora.org>
Date: Fri, 23 Oct 2020 14:52:24 -0700
Subject: [PATCH] hostapd: Fixes in EMA beacon transmission offload

(1) CSA failure: Fixed by initiating CSA for all BSSes on a radio.
    Each VAP has an assigned channel context in mac80211.
    Initiating CSA on only one transmitted VAP results in unequal
    number of assigned and reserved contexts.

(2) This change adds non-inheritance element only if transmitted VAP is
    secure but non-transmitted is open, and calculates the length of
    multiple BSSID element accordingly.

Signed-off-by: Aloka Dixit <alokad@codeaurora.org>
---
 hostapd/ctrl_iface.c       |  3 ---
 src/ap/beacon.c            |  9 +++------
 src/ap/ieee802_11.c        | 19 +++++++++++++------
 src/ap/ieee802_11_shared.c | 28 +++++++++++++++++++++++-----
 4 files changed, 39 insertions(+), 20 deletions(-)

Index: hostapd-2021-02-18/hostapd/ctrl_iface.c
===================================================================
--- hostapd-2021-02-18.orig/hostapd/ctrl_iface.c
+++ hostapd-2021-02-18/hostapd/ctrl_iface.c
@@ -2759,9 +2759,6 @@ static int hostapd_ctrl_iface_chan_switc
 			 * submitting multi-BSS CSA requests? */
 			return ret;
 		}
-
-		if (iface->bss[i]->iconf->multiple_bssid)
-			break;
 	}
 
 	return 0;
Index: hostapd-2021-02-18/src/ap/beacon.c
===================================================================
--- hostapd-2021-02-18.orig/src/ap/beacon.c
+++ hostapd-2021-02-18/src/ap/beacon.c
@@ -434,7 +434,7 @@ static u8 * hostapd_gen_probe_resp(struc
 {
 	struct hostapd_data *hidden = NULL;
 	struct ieee80211_mgmt *resp;
-	u8 *pos, *epos, *csa_pos, *ext_cap_pos;
+	u8 *pos, *epos, *csa_pos;
 	size_t buflen;
 
 	if (hapd->iconf->multiple_bssid &&
@@ -554,10 +554,7 @@ static u8 * hostapd_gen_probe_resp(struc
 	pos = hostapd_eid_ht_capabilities(hapd, pos);
 	pos = hostapd_eid_ht_operation(hapd, pos);
 
-	ext_cap_pos = pos;
 	pos = hostapd_eid_ext_capab(hapd, pos);
-	if ((pos - ext_cap_pos >= 13) && (ext_cap_pos[12] & 0x08))
-		ext_cap_pos[12] |= 0x01;
 
 	pos = hostapd_eid_time_adv(hapd, pos);
 	pos = hostapd_eid_time_zone(hapd, pos);
@@ -2102,9 +2099,9 @@ int ieee802_11_build_ap_params(struct ho
 						 MULTIPLE_BSSID_IE_MAX,
 						 hapd->iconf->ema_beacon);
 		params->multiple_bssid_ie_len = end - params->multiple_bssid_ies;
-		if ((params->multiple_bssid_ie_count <= 1) &&
+		if ((params->multiple_bssid_ie_count > 1) &&
 		    (ext_cap_len >= 13) && (ext_cap_pos[12] & 0x08))
-			ext_cap_pos[12] |= 0x01;
+			ext_cap_pos[12] &= ~0x01; /* Clear bit 80 */
 		params->dtim_period = hapd->conf->dtim_period;
 	}
 
Index: hostapd-2021-02-18/src/ap/ieee802_11.c
===================================================================
--- hostapd-2021-02-18.orig/src/ap/ieee802_11.c
+++ hostapd-2021-02-18/src/ap/ieee802_11.c
@@ -7081,6 +7081,8 @@ static int hostapd_eid_multiple_bssid_ch
 
 		if (wpa_auth_get_wpa_ie(bss->wpa_auth, &ies_len))
 			nontx_profile_len += ies_len;
+		else if (wpa_auth_get_wpa_ie(hapd->wpa_auth, &ies_len))
+			nontx_profile_len += 5; /* Non-inheritance element */
 
 		if (len + nontx_profile_len > 255) {
 			goto multiple_bssid_too_big;
@@ -7163,12 +7165,17 @@ static u8 * hostapd_eid_multiple_bssid_c
 
 		rsn = hostapd_get_rsne(bss, eid, end - eid);
 		if (rsn == eid) {
-			/* add RSN non-inheritance IE */
-			*eid++ = WLAN_EID_EXTENSION;
-			*eid++ = 3;
-			*eid++ = WLAN_EID_EXT_NON_INHERITANCE;
-			*eid++ = 1;
-			*eid++ = WLAN_EID_RSN;
+			/* add RSN non-inheritance IE if transmitted
+			 * VAP is secure and non-transmitted is not.
+			 */
+			size_t ies_len = 0;
+			if (wpa_auth_get_wpa_ie(hapd->wpa_auth, &ies_len)) {
+				*eid++ = WLAN_EID_EXTENSION;
+				*eid++ = 3;
+				*eid++ = WLAN_EID_EXT_NON_INHERITANCE;
+				*eid++ = 1;
+				*eid++ = WLAN_EID_RSN;
+			}
 		} else {
 			eid = rsn;
 			eid = hostapd_get_rsnxe(bss, eid, end - eid);
Index: hostapd-2021-02-18/src/ap/ieee802_11_shared.c
===================================================================
--- hostapd-2021-02-18.orig/src/ap/ieee802_11_shared.c
+++ hostapd-2021-02-18/src/ap/ieee802_11_shared.c
@@ -427,9 +427,13 @@ static void hostapd_ext_capab_byte(struc
 					       * Identifiers Used Exclusively */
 		}
 #endif /* CONFIG_SAE */
-		/* Bit 83 - EMA AP Support */
-		if (hapd->iconf->ema_beacon)
-                        *pos |= 0x08;
+		if (hapd->iconf->multiple_bssid) {
+			/* Bit 80 - Complete list of non-transmitted profiles */
+                        *pos |= 0x01;
+			/* Bit 83 - EMA AP Support */
+			if (hapd->iconf->ema_beacon)
+	                        *pos |= 0x08;
+		}
 		if (hapd->conf->beacon_prot &&
 		    (hapd->iface->drv_flags &
 		     WPA_DRIVER_FLAGS_BEACON_PROTECTION))
@@ -447,6 +451,16 @@ static void hostapd_ext_capab_byte(struc
 }
 
 
+void hostapd_eid_ext_capab_multiple_bssid(struct hostapd_data *hapd, u8 *eid,
+					  u8 len)
+{
+	if (!hapd->iconf->ema_beacon && (len >= 11))
+		eid[10] &= 0xF7;
+	if (!hapd->iconf->multiple_bssid && (len >= 3))
+		eid[2] &= 0xBF;
+}
+
+
 u8 * hostapd_eid_ext_capab(struct hostapd_data *hapd, u8 *eid)
 {
 	u8 *pos = eid;
@@ -459,7 +473,8 @@ u8 * hostapd_eid_ext_capab(struct hostap
 	    (hapd->conf->time_advertisement == 2 || hapd->conf->interworking))
 		len = 4;
 	if (len < 3 &&
-	    (hapd->conf->wnm_sleep_mode || hapd->conf->bss_transition))
+	    (hapd->conf->wnm_sleep_mode || hapd->conf->bss_transition ||
+	     hapd->iconf->multiple_bssid))
 		len = 3;
 	if (len < 1 &&
 	    (hapd->iconf->obss_interval ||
@@ -501,7 +516,7 @@ u8 * hostapd_eid_ext_capab(struct hostap
 	    hostapd_sae_pw_id_in_use(hapd->conf))
 		len = 11;
 #endif /* CONFIG_SAE */
-	if (len < 11 && (hapd->conf->beacon_prot || hapd->iconf->ema_beacon) &&
+	if (len < 11 && (hapd->conf->beacon_prot || hapd->iconf->multiple_bssid) &&
 	    (hapd->iface->drv_flags & WPA_DRIVER_FLAGS_BEACON_PROTECTION))
 		len = 11;
 #ifdef CONFIG_SAE_PK
@@ -526,6 +541,8 @@ u8 * hostapd_eid_ext_capab(struct hostap
 		}
 	}
 
+	hostapd_eid_ext_capab_multiple_bssid(hapd, eid + 2, len);
+
 	while (len > 0 && eid[1 + len] == 0) {
 		len--;
 		eid[1] = len;
